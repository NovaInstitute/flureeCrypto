% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aes.R
\name{encrypt_aes}
\alias{encrypt_aes}
\title{Encrypt with AES/CBC/PKCS7Padding}
\usage{
encrypt_aes(
  x,
  key,
  iv = as.raw(c(6, 224, 71, 170, 241, 204, 115, 21, 30, 8, 46, 223, 106, 207, 55, 42)),
  output_format = "hex"
)
}
\arguments{
\item{x}{The input to be encrypted, either a character string or a raw vector.}

\item{key}{The encryption key as a character string or raw vector. It will be hashed to 256 bits if provided as a string.}

\item{iv}{A raw vector representing the initialization vector (IV). Defaults to a pre-defined 16-byte vector.}

\item{output_format}{The format of the output. Options are "hex" (default), "base64", or "none" for raw bytes.}
}
\value{
The encrypted data in the specified format.
}
\description{
Encrypts the input using AES encryption in CBC mode with PKCS7 padding. The key is hashed to 256 bits.
You can provide an alternate initialization vector (IV) of unsigned bytes of size 16 for CBC.
}
\examples{
# Example usage:
encrypted <- encrypt_aes("Hello, World!", "mysecretkey")
print(encrypted)
}
