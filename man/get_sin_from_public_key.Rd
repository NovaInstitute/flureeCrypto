% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/secp256k1.R
\name{get_sin_from_public_key}
\alias{get_sin_from_public_key}
\title{Generate a SIN (Secure Identity Number) from a public key}
\usage{
get_sin_from_public_key(pub_key, output_format = "base58")
}
\arguments{
\item{pub_key}{A character string or raw vector representing the public key.
If a character string, it should be in hexadecimal format and will be converted to raw.}

\item{output_format}{A character string specifying the output format.
Can be "hex" (hexadecimal string), "raw" (raw byte vector), or "base58" (Base58Check encoded string).
Default is "base58".}
}
\value{
The SIN in the specified format. The output will be:
\itemize{
\item a hexadecimal string if \code{output_format} is "hex",
\item a raw vector if \code{output_format} is "raw",
\item a Base58Check encoded string if \code{output_format} is "base58".
}
}
\description{
This function generates a SIN from a given public key by applying
SHA-256 and RIPEMD-160 hash functions, appending version bytes, and adding a checksum.
}
\examples{
# Example usage with a hexadecimal public key
pub_key_hex <- "04bfcab45a58b09f12a87f6a736c19a65a..."
get_sin_from_public_key(pub_key_hex, output_format = "base58")

}
