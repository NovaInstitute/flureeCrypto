% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmac.R
\name{hmac_sha256}
\alias{hmac_sha256}
\title{HMAC-SHA256}
\usage{
hmac_sha256(message, key, output_format = c("hex", "base64", "raw")[3])
}
\arguments{
\item{message}{A raw vector representing the message.}

\item{key}{A raw vector representing the key.}

\item{output_format}{The format of the output hash. Options are "hex", "base64", or "raw" (default).}
}
\value{
A raw vector containing the HMAC-SHA256 result.
}
\description{
Returns HMAC using SHA-256 hashing. Both key and message should be raw vectors.
}
\examples{
# => (require '[alphabase.core :as alphabase])
# => (def message (.getBytes "hello"))
# => (def key (.getBytes "secret"))
# => (println (alphabase/bytes->hex (hmac-sha256 message key)))
# 88aab3ede8d3adf94d26ab90d3bafd4a2083070c3bcce9c014ee04a443847c0b
hmac_sha256(message = charToRaw("hello"), key = charToRaw("secret"))
hmac_sha256(message = charToRaw("hello"), key = charToRaw("secret"), output_format = "hex")
# "88aab3ede8d3adf94d26ab90d3bafd4a2083070c3bcce9c014ee04a443847c0b"
}
