% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aes.R
\name{decrypt_aes}
\alias{decrypt_aes}
\title{Decrypt with AES/CBC/PKCS7Padding}
\usage{
decrypt_aes(
  x,
  key,
  iv = as.raw(c(6, 224, 71, 170, 241, 204, 115, 21, 30, 8, 46, 223, 106, 207, 55, 42)),
  input_format = "hex",
  output_format = "string"
)
}
\arguments{
\item{x}{The input to be decrypted, either a character string or a raw vector.}

\item{key}{The decryption key as a character string or raw vector. It will be hashed to 256 bits if provided as a string.}

\item{iv}{A raw vector representing the initialization vector (IV). Defaults to a pre-defined 16-byte vector.}

\item{input_format}{The format of the encrypted input. Options are "hex" (default) or "base64".}

\item{output_format}{The format of the output. Options are "string" (default), "hex", or "none" for raw bytes.}
}
\value{
The decrypted data in the specified format.
}
\description{
Decrypts the input using AES decryption in CBC mode with PKCS7 padding. The key is hashed to 256 bits.
You can provide an alternate initialization vector (IV) of unsigned bytes of size 16 for CBC.
}
\examples{
encrypted_hex <- encrypt_aes("Encrypt this message!", "mysecretpassword")
decrypted_text <- decrypt_aes(encrypted_hex, "mysecretpassword")
print(decrypted_text)  # Outputs: "Encrypt this message!"
encrypted_base64 <- encrypt_aes("Encrypt this message!", "mysecretpassword", output_format = "base64")
decrypted_text <- decrypt_aes(encrypted_base64, "mysecretpassword", input_format = "base64")
print(decrypted_text)  # Outputs: "Encrypt this message!"
}
